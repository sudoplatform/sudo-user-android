ext {
    targetCompatibility = JavaVersion.VERSION_1_8
}// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = "1.3.72"
    ext.appsync_version = "3.1.0"
    ext.aws_version = "2.16.12"
    ext.dokka_version = '1.4.10'

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        classpath "org.owasp:dependency-check-gradle:6.0.1"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "com.amazonaws:aws-android-sdk-appsync-gradle-plugin:$appsync_version"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.8"
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.21.2"
        classpath "com.cookpad.android.licensetools:license-tools-plugin:1.7.0"
    }
}

apply plugin: 'io.codearte.nexus-staging'

allprojects {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
        if (project.hasProperty('nexusUsername')) {
            maven {
                name = "android-snapshots"
                url = "https://repo.tools.anonyome.com/repository/android-snapshots/"
                credentials {
                    username = nexusUsername
                    password = nexusPassword
                }
            }
            maven {
                name = "android-releases"
                url = "https://repo.tools.anonyome.com/repository/android-releases/"
                credentials {
                    username = nexusUsername
                    password = nexusPassword
                }
            }
        }
        jcenter()
    }
    gradle.projectsEvaluated {
        tasks.withType(Test) {
            outputs.upToDateWhen { false } // Force gradle to run unit tests even if everything is up to date
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
